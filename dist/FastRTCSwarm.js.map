{"version":3,"sources":["webpack://FastRTCSwarm/webpack/bootstrap","webpack://FastRTCSwarm/./src/FastRTCSwarm.ts","webpack://FastRTCSwarm/external \"@mattkrick/fast-rtc-peer\"","webpack://FastRTCSwarm/external \"eventemitter3\"","webpack://FastRTCSwarm/external \"tslib\""],"names":[],"mappings":"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","file":"FastRTCSwarm.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/FastRTCSwarm.ts\");\n","import FastRTCPeer, {\n  AnswerPayload,\n  CandidatePayload,\n  DataPayload,\n  OfferPayload,\n  PayloadToServer as PayloadToSwarm,\n  PeerConfig,\n  StreamDict,\n  StreamDictInput\n} from '@mattkrick/fast-rtc-peer'\nimport EventEmitter from 'eventemitter3'\nimport StrictEventEmitter from 'strict-event-emitter-types'\n\ntype Swarm<T> = T & {id: string}\n\nexport interface InitPayloadToServer {\n  readonly type: 'init'\n  readonly userId: string\n  readonly roomId: string | number\n}\n\nexport interface ClosePayloadToServer {\n  readonly type: 'close'\n}\n\nexport type CandidatePayloadToServer = Swarm<CandidatePayload>\nexport type AnswerPayloadToServer = Swarm<AnswerPayload>\nexport type OfferPayloadToServer = Swarm<OfferPayload>\nexport type PayloadToServer =\n  | CandidatePayloadToServer\n  | AnswerPayloadToServer\n  | OfferPayloadToServer\n  | InitPayloadToServer\n  | ClosePayloadToServer\n\ninterface SwarmOfferRequest {\n  readonly type: 'offerRequest'\n}\n\ninterface SwarmOfferAccepted {\n  readonly type: 'offerAccepted'\n  readonly id: string\n  readonly userId: string\n}\n\nexport interface SwarmAccept {\n  readonly type: 'accept'\n  readonly id: string\n  readonly userId: string\n  readonly signals: Array<OfferPayload | CandidatePayload>\n}\n\nexport interface SwarmLeave {\n  readonly type: 'leaveSwarm'\n  readonly id: string\n}\n\nexport type PayloadToClient =\n  | SwarmAccept\n  | SwarmOfferRequest\n  | SwarmOfferAccepted\n  | CandidatePayloadToServer\n  | AnswerPayloadToServer\n  | OfferPayloadToServer\n  | SwarmLeave\n\nexport interface FastRTCSwarmEvents {\n  signal: (payload: PayloadToServer) => void\n  data: (data: DataPayload, peer: FastRTCPeer) => void\n  open: (peer: FastRTCPeer) => void\n  close: (peer: FastRTCPeer) => void\n  error: (error: Error, peer?: FastRTCPeer) => void\n  stream: (stream: MediaStream, name: string, peer: FastRTCPeer) => void\n  connection: (iceConnectionState: RTCIceConnectionState, peer: FastRTCPeer) => void\n}\n\nexport type FastRTCSwarmEmitter = {new (): StrictEventEmitter<EventEmitter, FastRTCSwarmEvents>}\n\nexport interface SwarmConfig extends PeerConfig {\n  peerBuffer?: number\n  maxPeers?: number\n  roomId?: string | number\n}\n\ntype ConnectionId = string\n\nclass FastRTCSwarm extends (EventEmitter as FastRTCSwarmEmitter) {\n  peers = new Map<ConnectionId, FastRTCPeer>()\n  peerConfig: PeerConfig & {streams: StreamDict}\n  peerBuffer: number\n  maxPeers: number\n\n  constructor (config: SwarmConfig = {}) {\n    super()\n    const {\n      userId = FastRTCPeer.generateID(),\n      peerBuffer = 1,\n      maxPeers = 1024,\n      roomId = '',\n      ...peerConfig\n    } = config\n    this.peerBuffer = peerBuffer\n    this.maxPeers = maxPeers\n    this.peerConfig = { ...peerConfig, streams: FastRTCPeer.fromStreamShorthand(peerConfig.streams) }\n    // wait a tick to allow devs to set up their event listeners\n    setTimeout(() => this.emit('signal', { type: 'init', userId, roomId }))\n    for (let i = 0; i < this.peerBuffer; i++) {\n      this.createOfferer()\n    }\n  }\n\n  private createOfferer () {\n    const connectionId = FastRTCPeer.generateID()\n    const offeringPeer = this.initializePeer({\n      isOfferer: true,\n      id: connectionId,\n      ...this.peerConfig\n    })\n    this.peers.set(connectionId, offeringPeer)\n  }\n\n  private initializePeer (config: PeerConfig) {\n    const peer = new FastRTCPeer(config)\n    peer.on('signal', (signal: PayloadToSwarm, peer: FastRTCPeer) => {\n      this.emit('signal', { ...signal, id: peer.id } as PayloadToServer)\n    })\n    peer.on('open', (peer: FastRTCPeer) => {\n      this.emit('open', peer)\n    })\n    peer.on('close', (peer: FastRTCPeer) => {\n      this.peers.delete(peer.id)\n      this.emit('close', peer)\n    })\n    peer.on('data', (data: DataPayload, peer: FastRTCPeer) => {\n      this.emit('data', data, peer)\n    })\n    peer.on('stream', (stream: MediaStream, name: string, peer: FastRTCPeer) => {\n      this.emit('stream', stream, name, peer)\n    })\n    peer.on('error', (error: Error, peer: FastRTCPeer) => {\n      this.emit('error', error, peer)\n    })\n    peer.on('connection', (iceConnectionState: RTCIceConnectionState, peer: FastRTCPeer) => {\n      this.emit('connection', iceConnectionState, peer)\n    })\n    return peer\n  }\n\n  addStreams (streams: StreamDictInput) {\n    const streamDict = FastRTCPeer.fromStreamShorthand(streams)\n    this.peers.forEach((peer) => {\n      peer.addStreams(streamDict)\n    })\n\n    // update peerConfig so new peers get what the current ones are getting\n    const { streams: configStreams } = this.peerConfig\n    Object.keys(streamDict).forEach((streamName) => {\n      const trackDict = streamDict[streamName]\n      const configTracks = configStreams[streamName]\n      if (!configTracks) {\n        configStreams[streamName] = trackDict\n      } else {\n        Object.keys(trackDict).forEach((trackName) => {\n          configTracks[trackName] = trackDict[trackName]\n        })\n      }\n    })\n  }\n\n  broadcast (message: DataPayload) {\n    this.peers.forEach((peer) => {\n      peer.send(message)\n    })\n  }\n\n  close (): void {\n    this.emit('signal', { type: 'close' })\n    this.peers.forEach((peer) => peer.close())\n    this.peers.clear()\n  }\n\n  dispatch (payload: PayloadToClient): void {\n    switch (payload.type) {\n      case 'accept':\n        const { id, signals, userId } = payload\n        this.peers.set(id, this.initializePeer({ id: id, userId, ...this.peerConfig }))\n        signals.forEach((signal) => {\n          this.dispatch({ ...signal, id })\n        })\n        break\n      case 'offer':\n      case 'answer':\n      case 'candidate':\n        const { id: peerId, ...desc } = payload\n        const descPeer = this.peers.get(peerId)\n        if (descPeer) {\n          descPeer.dispatch(desc as any)\n        }\n        break\n      case 'offerRequest':\n        this.createOfferer()\n        break\n      case 'offerAccepted':\n        const acceptingPeer = this.peers.get(payload.id)\n        if (acceptingPeer) {\n          acceptingPeer.userId = payload.userId\n        }\n        break\n      case 'leaveSwarm':\n        const leavingPeer = this.peers.get(payload.id)\n        leavingPeer && leavingPeer.close()\n    }\n  }\n\n  muteTrack (name: string) {\n    // remove from config so new peers don't get the video\n    const { streams: configStreams } = this.peerConfig\n    Object.keys(configStreams).forEach((streamName) => {\n      const trackDict = configStreams[streamName]\n      Object.keys(trackDict).forEach((transceiverName) => {\n        if (transceiverName !== name) return\n        const entry = trackDict[transceiverName]\n        if (entry && typeof entry !== 'string') {\n          entry.track.stop()\n          // tell the hardware to turn off the light\n          entry.track.enabled = false\n        }\n      })\n    })\n\n    this.peers.forEach((peer) => peer.muteTrack(name))\n  }\n}\n\nexport default FastRTCSwarm\n","module.exports = require(\"@mattkrick/fast-rtc-peer\");","module.exports = require(\"eventemitter3\");","module.exports = require(\"tslib\");"],"sourceRoot":""}